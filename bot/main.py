import asyncio
import os
from datetime import datetime, timedelta
from zoneinfo import ZoneInfo

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommand
from dotenv import load_dotenv

from bot.handlers import router
from bot.notifier import notify_users
from bot.api import test_api_connection

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")
XUI_API_URL = os.getenv("XUI_API_URL")
XUI_USERNAME = os.getenv("XUI_USERNAME")
XUI_PASSWORD = os.getenv("XUI_PASSWORD")

print("üîß DEBUG ENV:", TOKEN, XUI_API_URL, XUI_USERNAME)

if not TOKEN:
    raise RuntimeError("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")

if not all([XUI_API_URL, XUI_USERNAME, XUI_PASSWORD]):
    raise RuntimeError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ XUI_API_URL, XUI_USERNAME –∏ XUI_PASSWORD –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ .env")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å HTML-–ø–∞—Ä—Å–∏–Ω–≥–æ–º
bot = Bot(
    token=TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher(storage=MemoryStorage())
dp.include_router(router)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
async def set_commands():
    await bot.set_my_commands([
        BotCommand(command="start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"),
    ])

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º
async def log_api_info():
    print("\nüõ† [main.py] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API 3x-ui:")
    try:
        result = await test_api_connection()
        if result:
            print(" ‚Üí ‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API")
        else:
            print(" ‚Üí ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ inbounds")
    except Exception as e:
        print(f" ‚Üí ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API: {e}")

# –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ 18:00 –ø–æ –ú–°–ö
async def periodic_notifications(bot: Bot):
    while True:
        now = datetime.now(ZoneInfo("Europe/Moscow"))
        target = now.replace(hour=18, minute=0, second=0, microsecond=0)
        if now > target:
            target += timedelta(days=1)

        wait_seconds = (target - now).total_seconds()
        print(f"‚è≥ –ñ–¥—ë–º –¥–æ 18:00 –ø–æ –ú–°–ö: {wait_seconds / 3600:.2f} —á.")
        await asyncio.sleep(wait_seconds)

        print("üîî –ó–∞–ø—É—Å–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
        await notify_users(bot)

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await log_api_info()
    await set_commands()
    asyncio.create_task(periodic_notifications(bot))
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())