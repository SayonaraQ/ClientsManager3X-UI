import os
import random
import string
import gspread
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()
SPREADSHEET_NAME = os.getenv("SPREADSHEET_NAME")
SHEET_TAB = os.getenv("SHEET_TAB_REF")
CREDENTIALS_PATH = os.getenv("GOOGLE_CREDENTIALS_PATH")


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
def generate_ref_code(length=8):
    return ''.join(random.choices(string.ascii_letters + string.digits, k=length))


# –ü–æ–ª—É—á–∏—Ç—å ref_code –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π
def get_or_create_ref_code(tg_id: int) -> str:
    gc = gspread.service_account(filename=CREDENTIALS_PATH)
    sh = gc.open(SPREADSHEET_NAME)
    ws = sh.worksheet(SHEET_TAB)

    all_rows = ws.get_all_values()
    for row in all_rows:
        if row[0] == str(tg_id):
            return row[2]  # ref_code —É–∂–µ –µ—Å—Ç—å

    new_code = generate_ref_code()
    ws.append_row([str(tg_id), "", new_code, datetime.now().strftime("%Y-%m-%d %H:%M"), ""])
    return new_code


# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≤—è–∑—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
def save_referral(inviter_tg_id: int, invited_tg_id: int, ref_code: str):
    gc = gspread.service_account(filename=CREDENTIALS_PATH)
    sh = gc.open(SPREADSHEET_NAME)
    ws = sh.worksheet(SHEET_TAB)

    all_rows = ws.get_all_values()
    for row in all_rows:
        if row[1] == str(invited_tg_id):
            return  # —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω –∫–∞–∫ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    now = datetime.now().strftime("%Y-%m-%d %H:%M")
    ws.append_row([str(inviter_tg_id), str(invited_tg_id), ref_code, now, "–ù–µ—Ç –±–æ–Ω—É—Å–∞"])


# –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö
def get_referrals_by_inviter(inviter_tg_id: int) -> list[dict]:
    gc = gspread.service_account(filename=CREDENTIALS_PATH)
    sh = gc.open(SPREADSHEET_NAME)
    ws = sh.worksheet(SHEET_TAB)

    rows = ws.get_all_values()
    result = []

    for row in rows:
        if row[0] == str(inviter_tg_id) and row[1]:
            result.append({
                "tg_id": row[1],
                "date": row[3],
                "bonus": row[4] if len(row) >= 5 else ""
            })
    return result


# –û–±—â–∏–π –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏
async def send_referral_link(bot, user_id, chat_id):
    ref_code = get_or_create_ref_code(user_id)
    bot_name = os.getenv("BOT_USERNAME")
    ref_link = f"https://t.me/{bot_name}?start=ref_{ref_code}"
    await bot.send_message(
        chat_id,
        f"üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å—ã!\n"
        f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n\n<code>{ref_link}</code>\n\n"
        f"üéÅ 5 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –∏ –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö –ø–æ–¥–ø–∏—Å–∫—É –¥—Ä—É–∑–µ–π = 1 –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ –¥–ª—è —Ç–µ–±—è\n"
        f"üéÅ 10 ‚Äî 2 –º–µ—Å—è—Ü–∞ –∏ —Ç.–¥.",
        parse_mode="HTML"
    )
